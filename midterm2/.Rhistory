pivot_wider(names_from = injury, values_from = total) %>%
mutate(total=sum(minor, major, fatal, none, na.rm=T)) %>%
arrange(desc(fatal))
sharks %>%
count(mode) %>%
arrange(desc(n))
sharks %>%
ggplot(aes(x=injury, fill=injury))+
geom_bar(alpha=0.8, position="dodge")+
facet_wrap(~mode)+
labs(title="Injury Type by Activity",
x=NULL,
y="Number of Incidents")+
theme(strip.text = element_text(size=10),
axis.text.x = element_text(size=8, angle = 60, hjust = 1))
sharks %>%
count(species) %>%
arrange(desc(n))
sharks %>%
filter(species=="White") %>%
ggplot(aes(x=injury))+
geom_bar(fill = "#0099f9", alpha=0.8)+
labs(title="Incidents Involving Great White Sharks",
x="Injury",
y="n")+
theme(axis.text.x = element_text(angle = 60, hjust = 1),
plot.title = element_text(size = 14, face="bold"))
white_sharks <- read_csv("data/White sharks tracked from Southeast Farallon Island, CA, USA, 1999 2004.csv", na = c("?", "n/a")) %>% clean_names()
glimpse(white_sharks)
miss_var_summary(white_sharks)
white_sharks %>%
filter(sex!="NA") %>%
group_by(sex) %>%
summarise(mean_length=mean(total_length_cm, na.rm=T),
n=n(), .groups='keep')
white_sharks %>%
filter(sex!="NA") %>%
ggplot(aes(x=sex, y=total_length_cm, fill=sex))+
geom_boxplot(alpha=0.8)+
labs(title="Length of Great White Sharks by Sex",
x="Sex",
y="Total Length (cm)")
white_sharks %>%
filter(sex!="NA") %>%
ggplot(aes(x=total_length_cm))+
geom_density(fill = "#0099f9", alpha=0.8)+
facet_wrap(~sex)+
labs(title="Distribution of Total Length by Sex",
x="Total Length (cm)",
y=NULL)+
theme(strip.text = element_text(size=10),
axis.text.x = element_text(size=8, angle = 60, hjust = 1))
library("tidyverse")
library("janitor")
library("naniar")
sharks <- read_csv("data/SharkIncidents_1950_2022_220302.csv") %>% clean_names()
summary(sharks)
sharks <- sharks %>%
filter(incident_num != "NOT COUNTED")
sharks %>%
count(county) %>%
ggplot(aes(x=reorder(county, n), y=n))+
geom_col()+
coord_flip()+
labs(title="Incidents Per county",
x=NULL,
y="number")+
theme_light()
sharks %>%
mutate(year==as.factor(year)) %>%
count(month) %>%
pivot_wider(names_from = month, values_from = n)
sharks %>%
mutate(year==as.factor(month)) %>%
count(month) %>%
ggplot(aes(x=reorder(month, n), y=n))+
geom_col()+
theme_minimal()+
theme(plot.title=element_text(size = rel(1.75), hjus=0.5))+
labs(x = NULL,
y = "Number of Incidents",
title = "# of Incidents per Month")
sharks %>%
filter(injury!="none"| injury!= "none*") %>%
group_by(county) %>%
count(injury) %>%
arrange(n)
sharks %>%
count(mode) %>%
arrange(desc(n)) %>%
head(1)
sharks %>%
group_by(injury) %>%
ggplot(aes(x=injury))+
geom_bar(alpha=0.8, color="black")+
facet_grid(~mode)+
theme_minimal()+
theme(plot.title=element_text(size = rel(1.75), hjus=0.5))+
labs(x = NULL,
y = "Number of Cases",
title = "Types of injuries per activity") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
sharks %>%
count(species)%>%
arrange(desc(n)) %>%
head(1)
sharks %>%
filter(species == "White") %>%
group_by(injury) %>%
ggplot(aes(x=injury))+
geom_bar(alpha=0.8, color="black")+
theme_minimal()+
theme(plot.title=element_text(size = rel(1.75), hjus=0.5))+
labs(x = NULL,
y = "Number of Cases",
title = "Types of injuries per activity") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
white_sharks <- read_csv("data/White sharks tracked from Southeast Farallon Island, CA, USA, 1999 2004.csv", na = c("?", "n/a")) %>% clean_names()
summary(white_sharks)
glimpse(white_sharks)
miss_var_summary(white_sharks)
white_sharks %>%
filter(sex != "NA") %>%
group_by(sex) %>%
summarise(mean_length=mean(total_length_cm)) %>%
arrange(desc(mean_length))
white_sharks %>%
filter(sex != "NA") %>%
group_by(sex) %>%
ggplot(aes(x=sex, y=total_length_cm, fill = sex))+
geom_boxplot(na.rm=T, alpha=0.8, color="black")+
labs(title="Total length compersion",
x=NULL,
y="Total Length in cm")+
theme_light()
white_sharks %>%
filter(maturity != "NA") %>%
group_by(sex) %>%
ggplot(aes(x=maturity, fill = comment))+
geom_bar(na.rm=T, alpha=0.8, color="black", position = "dodge")+
labs(title="Allocation of White Sharks by Maturity",
x="count")+
theme_light()
sharks %>%
mutate(month==as.factor(month)) %>%
count(month) %>%
ggplot(aes(x=reorder(month, n), y=n))+
geom_col()+
theme_minimal()+
theme(plot.title=element_text(size = rel(1.75), hjus=0.5))+
labs(x = NULL,
y = "Number of Incidents",
title = "# of Incidents per Month")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library("tidyverse")
library("janitor")
library("lubridate") #this will help us manage dates
library("tidyverse")
library("janitor")
library("lubridate") #this will help us manage dates
files <- list.files(path = "data/spiders", pattern = ".csv", full.names = TRUE)
files
spider_list <- lapply(files, read_csv)
spider_list <- lapply(files, read_csv)
spider_list[[3]]
str(spider_list)
names(spider_list)
names([[spider_list]])
names[[spider_list]]
names(spider_list[[1]])
names(spider_list[[2]])
names(spider_list[[5]])
names(spider_list[[1]])
spider_list[[2]] #look at the elements,
spider_list[[3]] #look at the elements,
spider_list[[4]] #look at the elements,
spider_list[[3]] #look at the elements,
names <- list.files(path = "data/spiders", pattern = ".csv")
names
names_list <- strsplit(names, split = " .csv")
names_list
names_vec <- unlist(names_list)
names_vec
names(spider_list) <- names_vec
names(spider_list)
str(spider_list[["Butte"]])
names(spider_list[["Butte"]])
butte <- spider_list[["Butte"]]
butte <- spider_list[["Butte"]]
butte
spiders_all <- bind_rows(spider_list)
spiders_all
table_A <- read_csv("data/table_A.csv")
table_B <- read_csv("data/table_B.csv")
table_A
table_B
inner_exampleDF <- inner_join(table_A, table_B, by="customer_ID")
inner_exampleDF
left_exampleDF <- left_join(table_A, table_B, by="customer_ID")
left_exampleDF
right_exampleDF <- right_join(table_A, table_B, by="customer_ID")
right_exampleDF
full_exampleDF <- full_join(table_A, table_B, by="customer_ID")
full_exampleDF
anti_exampleDF <- anti_join(table_A, table_B, by="customer_ID")
anti_exampleDF
spiders_locs <- read_csv("data/spiders locations/spiders_locations.csv")
spiders_locs <- read_csv("data/spiders locations/spiders_locations.csv")
spiders_locs
spiders_all <- left_join(spiders_all, spiders_locs, by="Accession")
summary(spiders_all)
day <- today()
day
str(day)
datetime <- now()
datetime
#class(spiders_with_locs$Date)
glimpse(spiders_with_locs)
class(spiders_with_locs$Date)
dmy(spiders_with_locs$Date)
dateformat1 <- "20200922"
dateformat2 <- "09-22-2020"
dateformat3 <- "22/09/2020"
dateformat4 <- "09-22-2020 17:00:00"
dateformat5 <- "20200922 170000"
ymd(dateformat1)
class(spiders_all$Date)
glimpse(spiders_all)
dmy(dateformat2)
mdy(dateformat2)
dmy(dateformat3)
mdy_hms(dateformat4)
mdy_hms(dateformat5)
ymd_hms(dateformat5)
dmy(spiders_all$Date)
spiders_with_locs <- left_join(spiders_all, spiders_locs, by="Accession") #new data into the left one
summary(spiders_with_locs)
class(spiders_with_locs$Date)
glimpse(spiders_with_locs)
dmy(spiders_with_locs$Date)
write.csv(spiders_with_locs, file = "spiders_with_locs.csv", row.names = FALSE)
library(tidyverse)
library(janitor)
#install.packages("ggmap")
library(ggmap)
register_stadiamaps("e77f55a8-a371-44cd-a7dd-6384b4586d64", write = FALSE)
spiders <- read_csv("data/spiders_with_locs.csv")%>% clean_names()
spiders <- spiders %>% filter(latitude<=42)
library(tidyverse)
library(janitor)
#install.packages("ggmap")
library(ggmap)
spiders <- read_csv("data/spiders_with_locs.csv")%>% clean_names()
spiders <- spiders %>% filter(latitude<=42)
spiders %>%
select(latitude, longitude) %>%
summary()
lat <- c(34.67, 41.80)
long <- c(-124.1, -115.5)
bbox <- make_bbox(long, lat, f = 0.03) #f is the fraction of the bounding box to add to the range
map1 <- get_stadiamap(bbox, maptype = "stamen_terrain", zoom=7) # and keep zoom 7
ggmap(map1)
ggmap(map1) +
geom_point(data = spiders, aes(longitude, latitude), size=0.4) +
labs(x= "Longitude", y= "Latitude", title="Spider Locations")
sharks <- read_csv("data/SharkIncidents_1950_2022_220302.csv") %>%
clean_names() %>%
filter(longitude !="NA" & latitude !="NA") %>% # pulling out NA locations
mutate(longitude = as.numeric(longitude)) # converting longitude to numeric
sharks_dups <- sharks %>%
distinct(location, .keep_all = TRUE) # remove duplicate locations, but keep the remaining variables
sharks_dups %>%
select(latitude, longitude) %>%
summary()
lat <- c(32.59, 41.56)
long <- c(-124.7 , -117.1)
bbox <- make_bbox(long, lat, f = 0.03)
map1.1 <- sharks_dups(bbox, maptype = "stamen_terrain", zoom=7)
lat <- c(32.59, 41.56)
long <- c(-124.7 , -117.1)
bbox_1 <- make_bbox(long, lat, f = 0.03)
map1.1 <- get_stadiamap(bbox_1, maptype = "stamen_terrain", zoom=7)
map1_1 <- get_stadiamap(bbox_1, maptype = "stamen_terrain", zoom=7)
ggmap(map1_1)
lat_1 <- c(32.59, 41.56)
long_1 <- c(-124.7 , -117.1)
bbox_1 <- make_bbox(long, lat, f = 0.03)
map1_1 <- get_stadiamap(bbox_1, maptype = "stamen_terrain", zoom=7)
ggmap(map1_1)
ggmap(map1) +
geom_point(data = sharks_dups, aes(longitude_1, latitude_1), size=0.4) +
labs(x= "Longitude", y= "Latitude", title="Sharks Locations")
ggmap(map1_1) +
geom_point(data = sharks_dups, aes(longitude_1, latitude_1), size=0.4) +
labs(x= "Longitude", y= "Latitude", title="Sharks Locations")
ggmap(map1_1)
ggmap(map1_1) +
geom_point(data = sharks, aes(longitude_1, latitude_1), size=0.4) +
labs(x= "Longitude", y= "Latitude", title="Sharks Locations")
ggmap(map1_1) +
geom_point(data = sharks, aes(longitude, latitude), size=0.4) +
labs(x= "Longitude", y= "Latitude", title="Sharks Locations")
View(sharks_dups)
sharks %>%
filter(injury == "fatal" ) %>%
ggmap(map1_1) +
geom_point(data = sharks, aes(longitude, latitude), size=0.4) +
labs(x= "Longitude", y= "Latitude", title="Sharks Locations")
sharks_dups_fatal <- sharks_dups %>%
filter(injury == "fatal" )
sharks_dups_fatal <- sharks_dups %>%
filter(injury == "fatal" )
sharks_dups_fatal %>%
select(latitude, longitude) %>%
summary()
lat_2 <- c(32.85, 39.58)
long_2 <- c(-123.8 , -117.3)
bbox_2 <- make_bbox(long, lat, f = 0.03)
ggmap(map1_1) +
geom_point(data = sharks_dups, aes(longitude, latitude), size=0.4) +
labs(x= "Longitude", y= "Latitude", title="Sharks Locations")
map1_1 <- get_stadiamap(bbox_2, maptype = "stamen_terrain", zoom=7)
map1_2 <- get_stadiamap(bbox_2, maptype = "stamen_terrain", zoom=7)
ggmap(map1_2) +
geom_point(data = sharks_dups_fatal, aes(longitude, latitude), size=0.4) +
labs(x= "Longitude", y= "Latitude", title="Sharks Locations")
map1_1 <- get_stadiamap(bbox_1, maptype = "stamen_terrain", zoom=7)
ggmap(map1_1)
ggmap(map1_1) +
geom_point(data = sharks_dups, aes(longitude, latitude), size=0.4) +
labs(x= "Longitude", y= "Latitude", title="Sharks Locations")
lat_2 <- c(32.85, 39.58)
long_2 <- c(-123.8 , -117.3)
bbox_2 <- make_bbox(long_2, lat_2, f = 0.03)
map1_2 <- get_stadiamap(bbox_2, maptype = "stamen_terrain", zoom=7)
ggmap(map1_2) +
geom_point(data = sharks_dups_fatal, aes(longitude, latitude), size=0.4) +
labs(x= "Longitude", y= "Latitude", title="Sharks Locations")
lat_1 <- c(32.59, 41.56)
long_1 <- c(-124.7 , -117.1)
bbox_1 <- make_bbox(lat_1, long_1, f = 0.03)
map1_1 <- get_stadiamap(bbox_1, maptype = "stamen_terrain", zoom=7)
ggmap(map1_1)
ggmap(map1_1) +
geom_point(data = sharks_dups, aes(longitude, latitude), size=0.4) +
labs(x= "Longitude", y= "Latitude", title="Sharks Locations")
ggmap(map1_1) +
geom_point(data = sharks_dups, aes(longitude, latitude), size=0.8) +
labs(x= "Longitude", y= "Latitude", title="Sharks Locations")
ggmap(map1_1) +
geom_point(data = sharks_dups, aes(longitude, latitude), size=0.8, fill="injury") +
labs(x= "Longitude", y= "Latitude", title="Sharks Locations")
ggmap(map1_1) +
geom_point(data = sharks_dups, aes(longitude, latitude), size=0.8, color="injury") +
labs(x= "Longitude", y= "Latitude", title="Sharks Locations")
ggmap(map1_1) +
geom_point(data = sharks_dups, aes(longitude, latitude, color=injury), size=0.8) +
labs(x= "Longitude", y= "Latitude", title="Sharks Locations")
map1_1 <- get_stadiamap(bbox_1, maptype = "stamen_terrain", zoom=7)
lat_1 <- c(32.59, 41.56)
long_1 <- c(-124.7 , -117.1)
bbox_1 <- make_bbox(lat_1, long_1, f = 0.03)
map1_1 <- get_stadiamap(bbox_1, maptype = "stamen_terrain", zoom=7)
lat_1 <- c(32.59, 41.56)
long_1 <- c(-124.7 , -117.1)
bbox_1 <- make_bbox(lat_1, long_1, f = 0.03)
map1_2 <- get_stadiamap(bbox_2, maptype = "stamen_terrain", zoom=7)
lat_2 <- c(32.85, 39.58)
long_2 <- c(-123.8 , -117.3)
bbox_2 <- make_bbox(long_2, lat_2, f = 0.03)
library(tidyverse)
library(janitor)
#install.packages("ggmap")
library(ggmap)
register_stadiamaps("e77f55a8-a371-44cd-a7dd-6384b4586d64", write = FALSE) #we will have to get our own code
spiders <- read_csv("data/spiders_with_locs.csv")%>% clean_names()
spiders <- spiders %>% filter(latitude<=42)
spiders %>%
select(latitude, longitude) %>%
summary()
lat <- c(34.67, 41.80)
long <- c(-124.1, -115.5)
bbox <- make_bbox(long, lat, f = 0.03) #f is the fraction of the bounding box to add to the range, start the map size with 0.03
map1 <- get_stadiamap(bbox, maptype = "stamen_terrain", zoom=7) # and keep zoom 7
ggmap(map1)
ggmap(map1) +
geom_point(data = spiders, aes(longitude, latitude), size=0.4) +
labs(x= "Longitude", y= "Latitude", title="Spider Locations")
sharks <- read_csv("data/SharkIncidents_1950_2022_220302.csv") %>%
clean_names() %>%
filter(longitude !="NA" & latitude !="NA") %>% # pulling out NA locations
mutate(longitude = as.numeric(longitude)) # converting longitude to numeric
sharks_dups <- sharks %>%
distinct(location, .keep_all = TRUE) # remove duplicate locations, but keep the remaining variables
sharks_dups %>%
select(latitude, longitude) %>%
summary()
lat_1 <- c(32.59, 41.56)
long_1 <- c(-124.7 , -117.1)
bbox_1 <- make_bbox(lat_1, long_1, f = 0.03)
map1_1 <- get_stadiamap(bbox_1, maptype = "stamen_terrain", zoom=7)
library(tidyverse)
library(janitor)
#install.packages("ggmap")
library(ggmap)
register_stadiamaps("e77f55a8-a371-44cd-a7dd-6384b4586d64", write = FALSE) #we will have to get our own code
spiders <- read_csv("data/spiders_with_locs.csv")%>% clean_names()
spiders <- spiders %>% filter(latitude<=42)
spiders %>%
select(latitude, longitude) %>%
summary()
lat <- c(34.67, 41.80)
long <- c(-124.1, -115.5)
bbox <- make_bbox(long, lat, f = 0.03) #f is the fraction of the bounding box to add to the range, start the map size with 0.03
map1 <- get_stadiamap(bbox, maptype = "stamen_terrain", zoom=7) # and keep zoom 7
ggmap(map1)
ggmap(map1) +
geom_point(data = spiders, aes(longitude, latitude), size=0.4) +
labs(x= "Longitude", y= "Latitude", title="Spider Locations")
sharks <- read_csv("data/SharkIncidents_1950_2022_220302.csv") %>%
clean_names() %>%
filter(longitude !="NA" & latitude !="NA") %>% # pulling out NA locations
mutate(longitude = as.numeric(longitude)) # converting longitude to numeric
sharks_dups <- sharks %>%
distinct(location, .keep_all = TRUE) # remove duplicate locations, but keep the remaining variables
sharks_dups %>%
select(latitude, longitude) %>%
summary()
lat_1 <- c(32.59, 41.56)
long_1 <- c(-124.7 , -117.1)
bbox_1 <- make_bbox(lat_1, long_1, f = 0.03)
map1_1 <- get_stadiamap(bbox_1, maptype = "stamen_terrain", zoom=7)
ggmap(map1_2) +
geom_point(data = sharks_dups_fatal, aes(longitude, latitude), size=0.4) +
labs(x= "Longitude", y= "Latitude", title="Sharks Locations")
spiders %>%
select(latitude, longitude) %>%
summary()
lat <- c(34.67, 41.80)
long <- c(-124.1, -115.5)
bbox <- make_bbox(long, lat, f = 0.03) #f is the fraction of the bounding box to add to the range, start the map size with 0.03
map1 <- get_stadiamap(bbox, maptype = "stamen_terrain", zoom=7) # and keep zoom 7
ggmap(map1)
ggmap(map1) +
geom_point(data = spiders, aes(longitude, latitude), size=0.4) +
labs(x= "Longitude", y= "Latitude", title="Spider Locations")
sharks <- read_csv("data/SharkIncidents_1950_2022_220302.csv") %>%
clean_names() %>%
filter(longitude !="NA" & latitude !="NA") %>% # pulling out NA locations
mutate(longitude = as.numeric(longitude)) # converting longitude to numeric
sharks_dups <- sharks %>%
distinct(location, .keep_all = TRUE) # remove duplicate locations, but keep the remaining variables
sharks_dups %>%
select(latitude, longitude) %>%
summary()
lat_1 <- c(32.59, 41.56)
long_1 <- c(-124.7 , -117.1)
bbox_1 <- make_bbox(lat_1, long_1, f = 0.03)
map1_1 <- get_stadiamap(bbox_1, maptype = "stamen_terrain", zoom=7)
map1_1 <- get_stadiamap(bbox_1, maptype = "stamen_terrain", zoom=7)
map1_1 <- get_stadiamap(bbox_1, maptype = "stamen_terrain", zoom=7)
map1_1 <- get_stadiamap(bbox_1, maptype = "stamen_terrain", zoom=7)
ggmap(map1_1)
ggmap(map1_1) +
geom_point(data = sharks_dups, aes(longitude, latitude, color=injury), size=0.8) +
labs(x= "Longitude", y= "Latitude", title="Sharks Locations")
sharks_dups_fatal %>%
select(latitude, longitude) %>%
summary()
lat_2 <- c(32.85, 39.58)
long_2 <- c(-123.8 , -117.3)
bbox_2 <- make_bbox(long_2, lat_2, f = 0.03)
map1_2 <- get_stadiamap(bbox_2, maptype = "stamen_terrain", zoom=7)
ggmap(map1_2) +
geom_point(data = sharks_dups_fatal, aes(longitude, latitude), size=0.4) +
labs(x= "Longitude", y= "Latitude", title="Sharks Locations")
sharks_dups_fatal <- sharks_dups %>%
filter(injury == "fatal" )
map1_1 <- get_stadiamap(bbox_1, maptype = "stamen_terrain", zoom=7)
lat_1 <- c(32.59, 41.56)
long_1 <- c(-124.7 , -117.1)
bbox_1 <- make_bbox(lat_1, long_1, f = 0.03)
lat_1 <- c(32.59, 41.56)
long_1 <- c(-124.7 , -117.1)
bbox_1 <- make_bbox(lat_1, long_1, f = 0.03)
register_stadiamaps("e77f55a8-a371-44cd-a7dd-6384b4586d64", write = FALSE) #we will have to get our own code
spiders <- read_csv("data/spiders_with_locs.csv")%>% clean_names()
lat <- c(34.67, 41.80)
long <- c(-124.1, -115.5)
bbox <- make_bbox(long, lat, f = 0.03) #f is the fraction of the bounding box to add to the range, start the map size with 0.03
map1 <- get_stadiamap(bbox, maptype = "stamen_terrain", zoom=7) # and keep zoom 7
ggmap(map1)
ggmap(map1) +
geom_point(data = spiders, aes(longitude, latitude), size=0.4) +
labs(x= "Longitude", y= "Latitude", title="Spider Locations")
sharks <- read_csv("data/SharkIncidents_1950_2022_220302.csv") %>%
clean_names() %>%
filter(longitude !="NA" & latitude !="NA") %>% # pulling out NA locations
mutate(longitude = as.numeric(longitude)) # converting longitude to numeric
sharks_dups <- sharks %>%
distinct(location, .keep_all = TRUE) # remove duplicate locations, but keep the remaining variables
sharks_dups %>%
select(latitude, longitude) %>%
summary()
lat_1 <- c(32.59, 41.56)
long_1 <- c(-124.7 , -117.1)
bbox_1 <- make_bbox(lat_1, long_1, f = 0.03)
map1_1 <- get_stadiamap(bbox_1, maptype = "stamen_terrain", zoom=7)
ggmap(map1_1)

my_favorite <- superhero_power %>%
filter(hero_names == "Groot") %>%
select_if(~all(. == "TRUE"))
my_favorite <- superhero_power %>%
filter(hero_names == "Groot") %>%
select_if(~all(. == "TRUE"))
my_favorite
height_weight_ratio <- superhero %>%
select(name, hight, weight) %>%
mutate(height_weight_ratio = height / weight)
height_weight_ratio <- superhero %>%
select(name, height, weight) %>%
mutate(height_weight_ratio = height / weight)
height_weight_ratio <- superhero %>%
select(name, height, weight) %>%
mutate(height_weight_ratio = height / weight)
glimpse(height_weight_ratio)
View(height_weight_ratio)
height_weight_ratio <- superhero %>%
select(name, height, weight) %>%
mutate(height_weight_ratio = height / weight) %>%
arange(height_weight_ratio)
height_weight_ratio <- superhero %>%
select(name, height, weight) %>%
mutate(height_weight_ratio = height / weight) %>%
arrange(height_weight_ratio)
height_weight_ratio <- superhero %>%
select(name, height, weight) %>%
mutate(height_weight_ratio = height / weight) %>%
arrange(height_weight_ratio) %>%
slice(1)
height_weight_ratio <- superhero %>%
select(name, height, weight) %>%
mutate(height_weight_ratio = height / weight) %>%
arrange(height_weight_ratio) %>%
head(1)
height_weight_ratio <- superhero %>%
select(name, height, weight) %>%
mutate(height_weight_ratio = height / weight) %>%
arrange(height_weight_ratio) %>%
head(1)
height_weight_ratio
height_weight_ratio <- superhero %>%
select(name, height, weight) %>%
mutate(height_weight_ratio = height / weight) %>%
arrange(desc(height_weight_ratio)) %>%
head(1)
height_weight_ratio
small_hero <- superhero %>%
filter(weight <= 50) %>%
arrange(weight)
small_hero
height_weight_ratio <- superhero %>%
select(name, height, weight) %>%
mutate(height_weight_ratio = height / weight) %>%
arrange(desc(height_weight_ratio)) %>%
slice(1)
height_weight_ratio
height_weight_ratio
groot_info <- superhero_power %>%
filter(hero_names %in% my_favorite$hero_names)
groot_info <- superhero_power %>%
filter(hero_name %in% my_favorite$hero_names)
colnames(superhero_power)
my_hero_info <- superhero_power %>%
filter(hero_name %in% my_favorite$hero_names)
my_favorite <- superhero_power %>%
filter(hero_names == "Groot") %>%
select_if(~all(. == "TRUE"))
my_favorite
my_hero_info <- superhero_power %>%
filter(hero_name %in% my_favorite$hero_names)
my_hero_info <- superhero_power %>%
filter(hero_names %in% my_favorite$hero_names)
my_favorite <- superhero_power %>%
filter(hero_names == "Groot") %>%
select_if(~all(. == "TRUE"))
my_favorite
my_favorite <- superhero_power %>%
filter(hero_names == "Groot") %>%
select_if(~all(. == "TRUE")) %>%
select(hero_names)
my_favorite <- superhero_power %>%
filter(hero_names == "Groot") %>%
select_if(~all(. == "TRUE"))
my_favorite
my_favorite <- superhero_power %>%
filter(hero_names == "Groot") %>%
select_if(~all(. == "TRUE")| names(.) == "hero_names")
my_favorite <- superhero_power %>%
filter(hero_names == "Groot") %>%
select_if(~all(. == "TRUE")| hero_names)
my_favorite <- superhero_power %>%
filter(hero_names == "Groot") %>%
select_if(~all(. == "TRUE") | . == "Groot")
my_favorite
my_hero_info <- superhero_power %>%
filter(hero_names %in% my_favorite$hero_names)
my_hero_info <- superhero_power %>%
filter(hero_names %in% my_favorite$hero_names)
my_hero_info
library("tidyverse")
library("janitor")
superhero_info <- read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
superhero <- clean_names(superhero_info)
tabyl(superhero, alignment)
publisher_info <- superhero %>%
select(publisher, name) %>%
arrange(publisher)
table(publisher_info$publisher)
filter(superhero, alignment == "neutral")
select(superhero, "name", "alignment", "race")
filter(superhero, race != "Human")
good_guys <- filter(superhero, alignment == "good")
bad_guys <- filter(superhero, alignment == "bad")
tabyl(good_guys$race)
filter(good_guys, race == "Vampire")
filter(bad_guys, gender == "Male", height > 200)
good_guys %>%
filter(hair_color == "Green") %>%
nrow()
bad_guys %>%
filter(hair_color == "Green") %>%
nrow()
small_hero <- superhero %>%
filter(weight <= 50) %>%
arrange(weight)
small_hero
height_weight_ratio <- superhero %>%
select(name, height, weight) %>%
mutate(height_weight_ratio = height / weight) %>%
arrange(desc(height_weight_ratio)) %>%
slice(1)
height_weight_ratio
height_weight_ratio
summary(superhero_powers)
superhero_power <- clean_names(superhero_powers)
dim(superhero_power)
special_heros <- superhero_power %>%
filter(agility == "TRUE", stealth == "TRUE", super_strength == "TRUE", stamina == "TRUE")
table(special_heros$hero_names)
my_hero_info <- superhero_power %>%
filter(hero_names %in% my_favorite$hero_names)
my_hero_info
my_favorite <- superhero_power %>%
filter(hero_names == "Groot") %>%
select_if(~all(. == "TRUE"))
my_favorite
my_hero_info <- superhero_power %>%
filter(hero_names %in% my_favorite$hero_names)
my_hero_info
my_favorite <- superhero_power %>%
filter(hero_names == "Groot") %>%
select_if(~all(. == "TRUE") | . == "Groot")
my_favorite
my_hero_info <- superhero_power %>%
filter(hero_names %in% my_favorite$hero_names)
my_hero_info
my_favorite <- superhero_power %>%
filter(hero_names == "Groot") %>%
select_if(~all(. == "TRUE") & . == "Groot")
my_favorite
my_hero_info <- superhero_power %>%
filter(hero_names %in% my_favorite$hero_names)
my_hero_info
my_favorite <- superhero_power %>%
filter(hero_names == "Groot") %>%
select_if(~all(. == "TRUE") | . == "Groot")
my_favorite
my_hero_info <- superhero_power %>%
filter(hero_names %in% my_favorite$hero_names)
my_hero_info
#install.packages("skimr")
library("skimr")
install.packages("skimr")
library("skimr")
install.packages("skimr")
library("tidyverse")
library("janitor")
install.packages("skimr")
library("skimr")
?msleep
names(msleep)
library("palmerpenguins")
msleep24 <- read_csv(msleep)
msleep24 <- read_csv(data/msleep)
msleep24 <- read_csv("data/msleep")
msleep24 <- read_csv("msleep")
library("palmerpenguins")
msleep
msleep24 <- msleep %>%
select(name, vore) %>%
muatae(sleep_total_24 = sleep_total/24) %>%
filter(sleep_total_24 <= 0.3)
msleep24 <- msleep %>%
select(name, vore) %>%
mutate(sleep_total_24 = sleep_total/24) %>%
filter(sleep_total_24 <= 0.3)
msleep24 <- msleep %>%
select(name, vore, sleep_total) %>%
mutate(sleep_total_24 = sleep_total/24) %>%
filter(sleep_total_24 <= 0.3)
summury(msleep)
summarise(msleep)
glimpse(msleep)
skim(msleep)
hist(msleep)
hist(msleep, sleept_total)
hist(msleep$sleept_total)
hist(msleep$sleept_total, main = "Histogram of sleept_total", xlab = "sleept_total")
hist(msleep24$sleept_total, main = "Histogram of sleept_total", xlab = "sleept_total")
msleep$sleept_total <- as.numeric(msleep24$sleept_total)
msleep$sleept_total <- as.numeric(msleep24$sleept_total_24)
msleep24 <- msleep %>%
select(name, vore, sleep_total) %>%
mutate(sleep_total_24 = sleep_total/24) %>%
filter(sleep_total_24 <= 0.3) %>%
select(name, vore, sleep_total, sleep_total_24)
glimpse(msleep)
skim(msleep)
msleep$sleept_total <- as.numeric(msleep24$sleept_total_24)
msleep24$sleept_total_24 <- as.numeric(msleep24$sleept_total_24)
msleep24 <- msleep %>%
mutate(sleep_total_24 = sleep_total/24) %>%
filter(sleep_total_24 <= 0.3) %>%
select(name, vore, sleep_total, sleep_total_24) %>%
arrange(desc(sleep_total_24))
glimpse(msleep)
View(msleep24)
skim(msleep)
msleep24$sleept_total_24 <- as.numeric(msleep24$sleept_total_24)
msleep24$sleept_total_24 <- as.numeric(msleep24$sleept_total_24)
View(msleep24)
glimpse(msleep24)
skim(msleep24)
msleep24$sleept_total_24 <- as.numeric(msleep24$sleept_total_24)
msleep24$sleept_total_24 <- as.numeric(msleep24$sleept_total_24)
msleep24$sleept_total_24 <- as.numeric(msleep24$sleept_total_24)
#msleep24$sleept_total_24 <- as.numeric(msleep24$sleept_total_24)
hist(msleep24$sleept_total_24)
msleep24$sleept_total_24 <- as.numeric(msleep24$sleept_total_24)
msleep24$sleep_total_24 <- as.numeric(msleep24$sleep_total_24)
hist(msleep24$sleept_total_24)
msleep24$sleep_total_24 <- as.numeric(msleep24$sleep_total_24)
#hist(msleep24$sleept_total_24)
#, main = "Histogram of sleept_total", xlab = "sleept_total")
msleep24$sleep_total_24 <- as.numeric(msleep24$sleep_total_24)
hist(msleep24$sleept_total_24)
msleep24$sleep_total_24 <- as.numeric(msleep24$sleep_total_24)
hist(msleep24$sleep_total_24)
#, main = "Histogram of sleept_total", xlab = "sleept_total")
msleep24$sleep_total_24 <- as.numeric(msleep24$sleep_total_24)
hist(msleep24$sleep_total_24, main = "Histogram of sleept_total", xlab = "sleept_total")
head(msleep)
large <- msleep %>%
select(name, genus, bodywt, sleep_total) %>%
filter(bodywt > 200) %>%
arrange(desc(bodywt))
large
mean(large$sleep_total)
msleep %>%
filter(bodywt > 200) %>%
summurize(mean_sleep_lg = mean(sleep_total))
msleep %>%
filter(bodywt > 200) %>%
summarize(mean_sleep_lg = mean(sleep_total))
msleep %>%
filter(bodywt < 10) %>%
summarize(mean_sleep_sm = mean(sleep_total))
View(msleep)
msleep %>%
silter(bodywt > 200) %>%
summarise(mean_sleep_lg = mean(sleep_total)),
msleep %>%
silter(bodywt > 200) %>%
summarise(mean_sleep_lg = mean(sleep_total)), (min_sleep_lg = min(sleep_total)), (max_sleep_lg = max(sleep_total)), (sd_sleep_lg = sd(sleep_total)), total=n()
msleep %>%
silter(bodywt > 200) %>%
summarise(mean_sleep_lg = mean(sleep_total),
min_sleep_lg = min(sleep_total),
max_sleep_lg = max(sleep_total),
sd_sleep_lg = sd(sleep_total),
total=n())
msleep %>%
silter(bodywt > 200) %>%
summarise(mean_sleep_lg = mean(sleep_total),
min_sleep_lg = min(sleep_total),
max_sleep_lg = max(sleep_total),
sd_sleep_lg = sd(sleep_total),
total=n())
msleep %>%
filter(bodywt > 200) %>%
summarise(mean_sleep_lg = mean(sleep_total),
min_sleep_lg = min(sleep_total),
max_sleep_lg = max(sleep_total),
sd_sleep_lg = sd(sleep_total),
total=n())
msleep %>%
filter(order == "Primates") %>%
summarise(mean_bodywt_p = mean(bodywt),
max_bodywt_p = max(bodywt),
min_bodywt_p = min(bodywt),
total=n())
msleep %>%
filter(bodywt > 100)
msleep %>%
filter(bodywt > 100) %>%
n_distinct(bodywt)
msleep %>%
filter(bodywt > 100) %>%
n_distinct(msleep)
msleep %>%
filter(bodywt > 100) %>%
n_distinct()
msleep %>%
filter(order == "Primates") %>%
summarise(mean_bodywt_p = mean(bodywt),
max_bodywt_p = max(bodywt),
min_bodywt_p = min(bodywt),
total=n())
msleep %>%
filter(order == "Primates") %>%
summarise(mean_bodywt_p = mean(bodywt),
max_bodywt_p = max(bodywt),
min_bodywt_p = min(bodywt),
total=n())
n_distinct(msleep$genus)
msleep %>%
summarise(mean_bodywt_p = mean(bodywt),
max_bodywt_p = max(bodywt),
min_bodywt_p = min(bodywt),
total=n())
msleep %>%
group_by(vore) %>% #we are grouping by feeding ecology, a categorical variable
summarize(min_bodywt = min(bodywt),
max_bodywt = max(bodywt),
mean_bodywt = mean(bodywt),
total=n())
msleep %>%
summarise(n_genera = n_distinct(genus))
msleep %>%
group_by(order) %>%
summarize(min_brainwt = min(brainwt),
max_brainwt = max(brainwt),
mean_brainwt = mean(brainwt),
total=n())
msleep %>%
group_by(order) %>%
summarize(min_brainwt = min(brainwt),
max_brainwt = max(brainwt),
mean_brainwt = mean(brainwt),
total=n())
msleep %>%
group_by(order) %>%
summarize(min_brainwt = min(brainwt), na.rm=TRUE,
max_brainwt = max(brainwt), na.rm=TRUE,
mean_brainwt = mean(brainwt), na.rm=TRUE,
total=n())
msleep %>%
group_by(order) %>%
summarize(min_brainwt = min(brainwt, na.rm=TRUE), na.rm=TRUE,
max_brainwt = max(brainwt), na.rm=TRUE,
mean_brainwt = mean(brainwt), na.rm=TRUE,
total=n())
msleep %>%
group_by(order) %>%
summarize(min_brainwt = min(brainwt, na.rm=TRUE),
max_brainwt = max(brainwt, na.rm=TRUE),
mean_brainwt = mean(brainwt, na.rm=TRUE),
total=n())
library("tidyverse")
library("janitor")
library("skimr")
library("palmerpenguins")
library("tidyverse")
library("janitor")
library("skimr")
library("palmerpenguins")
library("tidyverse")
library("janitor")
library("skimr")
library("palmerpenguins")
glimpse(penguins)
penguins %>%
group_by(island)
msleep %>%
group_by(order) %>%
select_if(~all(. == numeric())
msleep %>%
group_by(order) %>%
select_if(~all(is.numeric(.)))
msleep %>%
group_by(order) %>%
select_if(~all(is.numeric(.), na.rm=TRUE))
msleep %>%
group_by(order) %>%
select_if(~all(is.numeric(.)| . != "NA"))
msleep %>%
group_by(order) %>%
select_if(~all(is.numeric(.)))
penguins %>%
group_by(island) %>%
select_if(~all(is.numeric(.)))
penguins %>%
group_by(island) %>%
select_if(~all(is.numeric(.))) %>%
summarise(mean_body_mass_g == mean(body_mass_g))
penguins %>%
group_by(island) %>%
filter(!is.na(body_mass_g))
penguins %>%
group_by(island) %>%
summarise(n_nas == sum(is.na(body_mass_g)))
penguins %>%
group_by(island) %>%
summarize(n_nas =sum(is.na(body_mass_g)))
penguins %>%
group_by(island) %>%
select_if(~all(is.numeric(.))) %>%
summarise(mean_body_mass_g == mean(body_mass_g))
penguins %>%
group_by(island) %>%
select_if(~all(is.numeric(.))) %>%
penguins %>%
group_by(island) %>%
select_if(~all(is.numeric(.)))
penguins %>%
group_by(island) %>%
filter(!is.na(body_mass_g)) %>%
summarise(mean_body_mass_g == mean(body_mass_g))
penguins %>%
group_by(species, island) %>%
summarize(n=n(), .groups= 'keep')#the .groups argument here just prevents a warning message
penguins %>%
group_by(species, island) %>%
filter(!is.na(body_mass_g))
penguins %>%
group_by(species, island) %>%
filter(!is.na(body_mass_g)) %>%
summarize(mean_body_mass_g == mean(body_mass_g))
penguins %>%
group_by(species, island) %>%
filter(!is.na(body_mass_g)) #%>%
# summarise(mean_body_mass_g == mean(body_mass_g))
penguins %>%
group_by(species, island) %>%
filter(!is.na(body_mass_g)) %>%
summarize(mean_body_mass_g = mean(body_mass_g))
penguins %>%
group_by(species, island) %>%
summarize(n=n())#the .groups argument here just prevents a warning message, n=n is a number of observations
penguins %>%
group_by(species, island) %>%
summarize(n=n(), .groups= 'keep')#the .groups argument here just prevents a warning message, n=n is a number of observations
penguins %>%
group_by(species, island) %>%
summarize(n=n())#the .groups argument here just prevents a warning message, n=n is a number of observations
penguins %>%
group_by(species, island) %>%
summarize(n=n(), .groups= 'keep')#the .groups argument here just prevents a warning message, n=n is a number of observations
penguins %>%
count(island, sort = T) #sort=T sorts the column in descending order
penguins %>%
group_by(island) %>%
summarize(n=n())
penguins %>%
count(island, species, sort = T) # sort=T will arrange in descending order
tabyl(penguins)
penguins %>%
tabyl(island, species)
penguins %>%
tabyl(species, bill_length_mm)
penguins %>%
count(species, bill_length_mm, sort = T)
penguins %>%
group_by(species, sex) %>%
filter(!is.na(body_mass_g))
penguins %>%
group_by(sex) %>%
summarize(n_nas = sum(is.na(body_mass_g)))
penguins %>%
group_by(species) %>%
summarize(n_nas = sum(is.na(sex)))
penguins %>%
group_by(species, island) %>%
summarize(n_nas = sum(is.na(sex)))
penguins %>%
group_by(species, island) %>%
summarize(n=n())#the .groups argument here just prevents a warning message, n=n is a number of observations
penguins %>%
group_by(species, island) %>%
summarize(n=n(), .groups= 'keep')#the .groups argument here just prevents a warning message, n=n is a number of observations
penguins %>%
group_by(species, island) %>%
summarize(n_nas = sum(is.na(sex).groups= 'keep'))
penguins %>%
group_by(species, island) %>%
summarize(n_nas = sum(is.na(sex)).groups= 'keep')
penguins %>%
group_by(species, island) %>%
summarize(n_nas = sum(is.na(sex)))
penguins %>%
count(sex, island)
penguins %>%
summarize(distinct_species = n_distinct(species),
distinct_island = n_distinct(island),
distinct_sex = n_distinct(sex))
penguins %>%
summarize(across(c(species, island, sex), n_distinct))
penguins %>%
summarize(across(contains("mm"), mean, na.rm=T))
